name: Deploy to Linux EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci

  deploy:
    needs: test
    runs-on: self-hosted  # This runs on YOUR Linux Server
    if: github.ref == 'refs/heads/main'
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      VITE_API_TIMEOUT: ${{ secrets.VITE_API_TIMEOUT }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Deploy to Linux Server
      run: |
        echo "Starting deployment..."
        set -x  # Enable debug mode to show all commands
        
        cd /home/ec2-user/mentalspace-ehr
        
        # Check if directory exists and is a git repository
        if [ ! -d ".git" ]; then
          echo "Git repository not found. Cleaning directory and cloning from GitHub..."
          rm -rf /home/ec2-user/mentalspace-ehr/*
          rm -rf /home/ec2-user/mentalspace-ehr/.* 2>/dev/null || true
          git clone https://github.com/Yi-Jacob/mentalspace-ehr.git .
        else
          echo "Git repository found. Pulling latest changes..."
          git pull origin main
        fi
        
        # Create .env file with only essential secrets
        echo "Creating .env file..."
        echo "NODE_ENV=production" > .env
        echo "DATABASE_URL=${DATABASE_URL}" >> .env
        echo "JWT_SECRET=${JWT_SECRET}" >> .env
        echo "JWT_EXPIRES_IN=24h" >> .env
        echo "PORT=7000" >> .env
        echo "POSTGRES_USER=mentalspace" >> .env
        echo "POSTGRES_PASSWORD=secure_password" >> .env
        echo "REDIS_PASSWORD=redis_password" >> .env
        echo "VITE_API_TIMEOUT=${VITE_API_TIMEOUT}" >> .env
        chmod 600 .env
        
        echo "Stopping existing containers..."
        docker-compose down
        
        echo "Building and starting containers..."
        docker-compose up -d --build
        
        echo "Waiting for containers to start..."
        sleep 30
        
        echo "Checking container status..."
        docker ps -a
        
        echo "Checking backend logs..."
        docker logs mentalspace-backend --tail=50 || echo "Backend container not found"
        
        echo "Checking all container logs..."
        docker-compose logs --tail=50
        
        echo "Deployment completed!" 